# Бинарный поиск
# возьмём массив чисел, отсортированных по возрастанию
list = [10, 11, 13, 15, 20, 25, 26, 35, 56, 67, 78, 89, 90, 200]
# индексы 0  1   2   3   4   5   6   7   8  9   10   11  12  13

# искать будем число 35
search = 35

# начинается список с 0 индекса
start = 0

# заканчивается список последним индексом который == длине нашего списка
stop = len(list)

# Создаём функцию поиска с аргументами: список, искомое, старт, стоп
def binarysearch(list, search, start, stop):
    # если старт больше стопа, значит список не имеет значений
    if start > stop:
        return False
    else:
        # находим индекс средней цифры в списке
        mid = (start + stop) // 2
        # если искомое равно среднему, то возвращаем его
        if search == list[mid]:
            return mid
        # если искомое меньше чем среднее число списка
        elif search < list[mid]:
            # возвращаем функцию поиска в первой части списка (от [0] до [середины])
            return binarysearch(list, search, start, mid - 1)
        # если искомое больше чем среднее число списка
        else:
            # возвращаем функцию поиска во второй части списка (от [середины] до [конца])
            return binarysearch(list, search, mid + 1, stop)
    # делим список на две части пока не найдём число и не вернём его
    # то есть пока старт, стоп и среднее не будут равны числу
    # либо пока старт не станет больше стопа == числа в списке нет


x = binarysearch(list, search, start, stop)

if not x:
    # если список не имеет значений или старт больше стопа значит нашего числа в нём нет
    print('Item ', search, 'Not Found!')
else:
    # иначе х получает индекс искомого числа
    print('Item', search, 'Found at Index ', x)

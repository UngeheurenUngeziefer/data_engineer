# Дан текст. Выведите все слова, встречающиеся в тексте, по одному на каждую строку.
# Слова должны быть отсортированы по убыванию их количества появления в тексте,
# а при одинаковой частоте появления — в лексикографическом порядке.
# После того, как вы создадите словарь всех слов, вам захочется отсортировать его по частоте встречаемости слова.
# Желаемого можно добиться, если создать список, элементами которого будут кортежи из двух элементов:
# частота встречаемости слова и само слово. Например, [(2, 'hi'), (1, 'what'), (3, 'is')].
# Тогда стандартная сортировка будет сортировать список кортежей, при этом кортежи сравниваются по первому элементу,
# а если они равны —то по второму. Это почти то, что требуется в задаче.

# подгружаем библиотеку позволяющую
# получать второе значение из кортежа
from operator import itemgetter

with open('input.txt') as f_input:
    data = f_input.read().split()
dictf = {}
counter = 1

# создаём словарь с значением и количеством упоминаний оного
for i in data:
    if i not in dictf:
        dictf[i] = counter
    else:
        dictf[i] += 1

# делаем из словаря кортеж, где ключ и значение
# равняется парам кортежа
items = list(dictf.items())

# сортируем кортеж по не возрастанию
p = sorted(sorted(items), key=lambda x: x[1], reverse=True)

# создаём список чтобы распечатать элементы каждый
# с новой строки
newlist = (list(map(itemgetter(0), p)))
sulist = newlist

# создаём цикл печатающий элементы списка с новой строки каждый
for i in sulist:
    print(i)

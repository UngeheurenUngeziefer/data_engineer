# поразрядная Radix сортировка наиболее быстрая, если мы имеем дело с целыми числами
# возьмём случайный массив цифр
list = [23, 43, 65, 33, 45, 50, 56, 321, 78, 87, 4, 3456, 1, 2, 6, 999]

# зададим переменные для дальнейшего деления, чтобы прийти к разрядам чисел в массиве
divide1 = 1
divide2 = 10

# создаём флаг по которому запускается цикл while
# пока while запущен...
flag = True
while flag:

    # сразу выключаем условие while
    flag = False

    # создаём переменную, которая будет хранить списки внутри списка, для хранения цифр массива поразрядно
    places = [[], [], [], [], [], [], [], [], [], []]

    # запускаем цикл проходящий по числам массива
    for num in list:

        # создаём переменную position
        # она хранит = каждое число, делённое на остаток от деления на (raz2) 10
        # (например 23 % 10 = 3). Получаем 1ый разряд числа - единицы
        # также происходит процесс деления на (raz1)
        ## на втором большом цикле когда значения умножатся на 10
        ## будем брать остаток от деления каждого числа на 100 и целочисленного деления на 10
        ## таким образом достигнем 2ого разряда
        ### на третьем цикле мы достигаем 3ей разрядности чисел делением на 100 и 1000 и т. д.
        position = num % divide2 // divide1

        # в список places с индексом position (1ый разряд от 0 до 9)
        # добавляем каждое число проходящее по циклу (в зависимости от значения 1ого разряда)
        # значение (индекс) position таким образом будет совпадать с значением 1ого разряда чисел массива
        places[position].append(num)

        # если флаг не в значении True и если индекс position больше нуля
        # тогда включаем флаг, чтобы запустить цикл ещё раз
        if not flag and position > 0:
            flag = True

    # напечатаем наш отсортированный список, чтобы отследить правильность исполнения
    print(places)

    # делаем наш изначальный список list пустым
    # это необходимо для сохранения правильной последовательности в последнем цикле
    list = []

    # запускаем цикл для каждого числа в списке places
    # (который состоит из списков объединённых по 1ому разряду чисел)
    for i in places:

        # в цикле запускаем ещё один цикл
        # для каждого числа в каждом списке внутри большого списка places
        for j in i:
            # добавляем в новый пустой список эти числа циклом в цикле
            list.append(j)

    # для дальнейшей сортировки необходимо получать 2ой, 3ий разряды по порядку и так далее
    # для этого умножаем переменные на 10
    ## на втором цикле у нас уже будет 100 и 1000
    # 1 * 10 = 10
    divide1 = divide1 * 10

    # 10 * 10 = 100
    divide2 = divide2 * 10

# печатаем результат: отсортированный список
print(list)
